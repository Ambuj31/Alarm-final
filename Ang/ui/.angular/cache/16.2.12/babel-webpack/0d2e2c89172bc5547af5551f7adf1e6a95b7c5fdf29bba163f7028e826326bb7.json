{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AlarmService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/readData';\n  }\n  getAlarms() {\n    return this.http.get(this.apiUrl).pipe(catchError(error => {\n      console.error('Error getting alarms:', error);\n      return throwError(error);\n    }));\n  }\n  getById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`).pipe(catchError(error => {\n      console.error(`Error getting alarm with id ${id}:`, error);\n      return throwError(error);\n    }));\n  }\n  create(alarm) {\n    return this.http.post(this.apiUrl, alarm).pipe(catchError(error => {\n      console.error('Error creating alarm:', error);\n      return throwError(error);\n    }));\n  }\n  updateAlarm(alarm) {\n    return this.http.put(`${this.apiUrl}/${alarm.id}`, alarm).pipe(catchError(error => {\n      console.error(`Error updating alarm with id ${alarm.id}:`, error);\n      return throwError(error);\n    }));\n  }\n  delete(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`).pipe(catchError(error => {\n      console.error(`Error deleting alarm with id ${id}:`, error);\n      return throwError(error);\n    }));\n  }\n  static #_ = this.ɵfac = function AlarmService_Factory(t) {\n    return new (t || AlarmService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AlarmService,\n    factory: AlarmService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { AlarmService };","map":{"version":3,"names":["throwError","catchError","AlarmService","constructor","http","apiUrl","getAlarms","get","pipe","error","console","getById","id","create","alarm","post","updateAlarm","put","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\AMBUJ\\AMBUJ\\COLLEGE\\GG\\alarm-demo-main\\Ang\\ui\\src\\app\\data.service.ts"],"sourcesContent":["// alarm.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Alarm } from './app.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlarmService {\n  private apiUrl = 'http://localhost:3000/readData';\n\n  constructor(private http: HttpClient) { }\n\n  getAlarms(): Observable<Alarm[]> {\n    return this.http.get<Alarm[]>(this.apiUrl).pipe(\n      catchError(error => {\n        console.error('Error getting alarms:', error);\n        return throwError(error);\n      })\n    );\n  }\n\n  getById(id: number): Observable<Alarm> {\n    return this.http.get<Alarm>(`${this.apiUrl}/${id}`).pipe(\n      catchError(error => {\n        console.error(`Error getting alarm with id ${id}:`, error);\n        return throwError(error);\n      })\n    );\n  }\n\n  create(alarm: Alarm): Observable<Alarm> {\n    return this.http.post<Alarm>(this.apiUrl, alarm).pipe(\n      catchError(error => {\n        console.error('Error creating alarm:', error);\n        return throwError(error);\n      })\n    );\n  }\n\n  updateAlarm(alarm: Alarm): Observable<Alarm> {\n    return this.http.put<Alarm>(`${this.apiUrl}/${alarm.id}`, alarm).pipe(\n      catchError(error => {\n        console.error(`Error updating alarm with id ${alarm.id}:`, error);\n        return throwError(error);\n      })\n    );\n  }\n\n  delete(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`).pipe(\n      catchError(error => {\n        console.error(`Error deleting alarm with id ${id}:`, error);\n        return throwError(error);\n      })\n    );\n  }\n}\n"],"mappings":"AAIA,SAASA,UAAU,QAAQ,MAAM;AACjC,SAASC,UAAU,QAAQ,gBAAgB;;;AAG3C,MAGaC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC;EAET;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,MAAM,CAAC,CAACG,IAAI,CAC7CP,UAAU,CAACQ,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,OAAOT,UAAU,CAACS,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAEAE,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAQ,GAAG,IAAI,CAACF,MAAM,IAAIO,EAAE,EAAE,CAAC,CAACJ,IAAI,CACtDP,UAAU,CAACQ,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,+BAA+BG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC1D,OAAOT,UAAU,CAACS,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAEAI,MAAMA,CAACC,KAAY;IACjB,OAAO,IAAI,CAACV,IAAI,CAACW,IAAI,CAAQ,IAAI,CAACV,MAAM,EAAES,KAAK,CAAC,CAACN,IAAI,CACnDP,UAAU,CAACQ,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,OAAOT,UAAU,CAACS,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAEAO,WAAWA,CAACF,KAAY;IACtB,OAAO,IAAI,CAACV,IAAI,CAACa,GAAG,CAAQ,GAAG,IAAI,CAACZ,MAAM,IAAIS,KAAK,CAACF,EAAE,EAAE,EAAEE,KAAK,CAAC,CAACN,IAAI,CACnEP,UAAU,CAACQ,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,gCAAgCK,KAAK,CAACF,EAAE,GAAG,EAAEH,KAAK,CAAC;MACjE,OAAOT,UAAU,CAACS,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAEAS,MAAMA,CAACN,EAAU;IACf,OAAO,IAAI,CAACR,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACb,MAAM,IAAIO,EAAE,EAAE,CAAC,CAACJ,IAAI,CACxDP,UAAU,CAACQ,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,gCAAgCG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC3D,OAAOT,UAAU,CAACS,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAAC,QAAAU,CAAA,G;qBAhDUjB,YAAY,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZtB,YAAY;IAAAuB,OAAA,EAAZvB,YAAY,CAAAwB,IAAA;IAAAC,UAAA,EAFX;EAAM;;SAEPzB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}